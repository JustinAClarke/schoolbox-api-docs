# The request is allOf:
#  * user object stub
#  * author object stub
#  * arrays of object stubs for each of {roles, campuses, folders, guests}.
#  * allDay specified as boolean
#  * all the common event properties,
allOf:
  - type: object
    properties:
      user:
        type: object
        description: An object stub for specifying a user.
        properties:
          id:
            $ref: ../../schemas/id.yaml
      author:
        type: object
        description: An object stub for specifying an author.
        properties:
          id:
            $ref: ../../schemas/id.yaml
      roles:
        type: array
        description: Array of role object stubs.
        example: [{"id":123}, {"id":456}]
        items:
          type: object
          properties:
            id:
              $ref: ../../schemas/id.yaml
      campuses:
        type: array
        description: Array of campus object stubs.
        example: [{"id":123}, {"id":456}]
        items:
          type: object
          properties:
            id:
              $ref: ../../schemas/id.yaml
      folders:
        type: array
        description: Array of folder object stubs.
        example: [{"id":123}, {"id":456}]
        items:
          type: object
          properties:
            id:
              $ref: ../../schemas/id.yaml
      guests:
        type: array
        description: Array of user object stubs.
        example: [{"id":123}, {"id":456}]
        items:
          type: object
          properties:
            id:
              $ref: ../../schemas/id.yaml
      allDay:
        type: boolean
        example: false
        nullable: false
        description: Whether the event is an all day event.
  - $ref: ./eventCommonProps.yaml
