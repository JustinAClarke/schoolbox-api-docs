# The request is allOf:
#  * oneOf {'userId' int or 'user' object stub}
#  * oneOf {'authorId' int or 'author' object stub}
#  * all the common event properties,
#  * arrays of object stubs or ids for each of {roles, campuses, folders, guests}.
allOf:
  - oneOf:
      - type: object
        properties:
          userId:
            $ref: ../../schemas/id.yaml
      - type: object
        properties:
          user:
            type: object
            description: An alternative to userId for specifying a user.  Supply either 'userId' or the 'user' object stub.
            properties:
              id:
                $ref: ../../schemas/id.yaml
  - oneOf:
      - type: object
        properties:
          authorId:
            $ref: ../../schemas/id.yaml
      - type: object
        properties:
          author:
            type: object
            description: An alternative to authorId for specifying an author.  Supply either 'authorId' or the 'author' object stub.
            properties:
              id:
                $ref: ../../schemas/id.yaml
  - $ref: ./eventCommonProps.yaml
  - type: object
    properties:
      roles:
        type: array
        description: Array of role object stubs or ids.
        items:
          oneOf:
            - type: object
              properties:
                id:
                  $ref: ../../schemas/id.yaml
            - $ref: ../../schemas/id.yaml
      campuses:
        type: array
        description: Array of campus object stubs or ids.
        example: [{"id":123}, {"id":456}]
        items:
          oneOf:
            - type: object
              properties:
                id:
                  $ref: ../../schemas/id.yaml
            - $ref: ../../schemas/id.yaml
      folders:
        type: array
        description: Array of folder object stubs or ids.
        example: [{"id":123}, {"id":456}]
        items:
          oneOf:
            - type: object
              properties:
                id:
                  $ref: ../../schemas/id.yaml
            - $ref: ../../schemas/id.yaml
      guests:
        type: array
        description: Array of user object stubs or ids.
        example: [{"id":123}, {"id":456}]
        items:
          oneOf:
            - type: object
              properties:
                id:
                  $ref: ../../schemas/id.yaml
            - $ref: ../../schemas/id.yaml